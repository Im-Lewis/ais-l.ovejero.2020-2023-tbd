name: Workflow3

on: workflow_dispatch
  #push: 
    #branches: 
      #- 'release-*'
      
jobs:
  publish: 
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with: 
          distribution: 'temurin'
          java-version: '17'
          
      - name: Ejecutar tests
        run: mvn test -Dtest=!SanityTest
        
      - name: Crear imagen Docker 
        run: mvn spring-boot:build-image -DskipTests
          -Dspring-boot.build-image.imageName=${{ secrets.DOCKER_USERNAME }}/books-reviewer:${{ github.sha }} 
          
      - name: Iniciar sesion en DockerHub
        run: docker login 
          -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}" 
        
      - name: Subir imagen a DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/books-reviewer:${{ github.sha }}
          
      - name: Instalar el cliente de Okteto CLI
        run: curl https://get.okteto.com -sSfL | sh
        
      - name: Iniciar sesion en Okteto
        run: okteto context use https://cloud.okteto.com --token ${{ secrets.OKTETO_TOKEN }}
        
      - name: Desplegar en Okteto
        run: |
          export VERSION=${{ github.sha }}
          okteto deploy --wait
          
      - name: Obtener direcci√≥n del host de Okteto
        id: get_host
        env:
          OKTETO_TOKEN: ${{ secrets.OKTETO_TOKEN }}
        run: |
          export OKTETO_NAMESPACE=$(okteto namespace)
          export HOST=$(okteto stack output books-reviewer -n $OKTETO_NAMESPACE --json | jq -r '.[0].addresses[0]')
          echo "::set-output name=host::$HOST"
          
      - name: Ejecutar Sanity Test
        env:
          HOST: ${{ steps.get_host.outputs.host }}
        run: mvn -Dhost=$HOST test -Dtest=SanityTest










